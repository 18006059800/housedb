package com.github.coolcool.sloth.lianjiadb.service.impl;

import com.github.coolcool.sloth.lianjiadb.common.Page;
import com.github.coolcool.sloth.lianjiadb.mapper.HttpproxyMapper;
import com.github.coolcool.sloth.lianjiadb.model.Httpproxy;
import com.github.coolcool.sloth.lianjiadb.service.HttpproxyService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.annotation.Generated;
import java.util.List;


@Generated(
	value = {
		"https://github.com/coolcooldee/sloth",
		"Sloth version:1.0"
	},
	comments = "This class is generated by Sloth"
)
@Service
public  class HttpproxyServiceImpl implements HttpproxyService {

	Logger logger = LoggerFactory.getLogger(HttpproxyService.class);

	@Autowired
	private HttpproxyMapper httpproxyMapper;

	public Integer save(Httpproxy httpproxy){
		return httpproxyMapper.save(httpproxy);
	}

	@Override
	public Httpproxy getById(Integer id){
		return httpproxyMapper.getById(id);
	}
	@Override
	public void deleteById(Integer id){
		httpproxyMapper.deleteById(id);
	}
	@Override
	public void update(Httpproxy httpproxy){
		httpproxyMapper.update(httpproxy);
	}

	@Override
	public Integer count(){
	    return httpproxyMapper.count();
	}

	@Override
	public List<Httpproxy> list(){
		return httpproxyMapper.list();
	}

	@Override
	public Page<Httpproxy> page(int pageNo, int pageSize) {
		Page<Httpproxy> page = new Page<>();
        int start = (pageNo-1)*pageSize;
        page.setPageSize(pageSize);
        page.setStart(start);
        page.setResult(httpproxyMapper.page(start,pageSize));
        page.setTotalCount(httpproxyMapper.count());
        return page;
	}
	
}